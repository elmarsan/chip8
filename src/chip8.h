#pragma once

#include <cstdint>
#include <random>
#include <stack>
#include <string>

#include "bit.h"

constexpr int chip8Width = 64;
constexpr int chip8Height = 32;

constexpr int spriteCount = 15;
constexpr int spriteSize = 5;
constexpr uint8_t spriteStartAddress = 0x50;

constexpr uint8_t fontset[80] = {
    0xF0, 0x90, 0x90, 0x90, 0xF0,  // 0
    0x20, 0x60, 0x20, 0x20, 0x70,  // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0,  // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0,  // 3
    0x90, 0x90, 0xF0, 0x10, 0x10,  // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0,  // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0,  // 6
    0xF0, 0x10, 0x20, 0x40, 0x40,  // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0,  // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0,  // 9
    0xF0, 0x90, 0xF0, 0x90, 0x90,  // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0,  // B
    0xF0, 0x80, 0x80, 0x80, 0xF0,  // C
    0xE0, 0x90, 0x90, 0x90, 0xE0,  // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0,  // E
    0xF0, 0x80, 0xF0, 0x80, 0x80   // F
};

constexpr int inputKeyCount = 15;

struct Chip8
{
    // General purpose registers
    // reg[15] = flag register
    uint8_t regs[16];

    // Special registers
    uint16_t pc;
    uint16_t ri;
    uint8_t rdelay;
    uint8_t rsound;

    uint8_t memory[4096]{};
    uint32_t videoBuffer[chip8Width * chip8Height]{};

    std::stack<uint16_t> stack;

    bool input[15];

    Chip8();

    bool LoadRom(const std::string& path);
    void ExecuteNext();
};
